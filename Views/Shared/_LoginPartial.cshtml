@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentScheduling.Models.ApplicationUser> signInManager

@if (signInManager.IsSignedIn(User))
{
    <form id="logoutForm" asp-action="LogOff" asp-controller="Account" method="post">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link ">Hello, @User.Identity.Name!</li>
            <li><a class="text-white nav-link ml-3" href="Javascript:document.getElementById('logoutForm').submit()">Log Off</a></li>
        </ul>
    
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item">
            <a asp-action="Register" asp-controller="Account" class="nav-link text-light" id="registerLink">Register</a>
            @*@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })*@
        </li>
        <li>
            <a asp-action="Login" asp-controller="Account" class="nav-link text-light" id="loginLink">Login</a>
            @*@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })*@
        </li>
    </ul>
}